
// 设置时区
timedatectl set-timezone Asia/Shanghai

// mysql
docker run --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=abc123 -d mysql --default-authentication-plugin=mysql_native_password

// rabbitmq
docker run -d --hostname my-rabbit --name rabbit -p 15672:15672 -p 5672:5672 rabbitmq:management


// consul
docker run --name consul -d -p 5902:8500 -p 8300:8300 -p 8301:8301 -p 8302:8302 -p 8600:8600 -p 8500:8500  consul agent -server -bootstrap-expect=1 -ui -bind=0.0.0.0 -client=0.0.0.0


// Ubuntu 启动 telnet 

/etc/init.d/openbsd-inetd start


// elasticsearch
docker run -d --name elasticsearch -p 9200:9200 -p 9300:9300 -v /etc/timezone:/etc/timezone -v /etc/localtime:/etc/localtime --restart always -e "discovery.type=single-node" elasticsearch:6.7.2

// elastichq/elasticsearch-hq
docker run -d --name elastic-hq -p 5000:5000 -v /etc/timezone:/etc/timezone -v /etc/localtime:/etc/localtime --restart always elastichq/elasticsearch-hq



// skywalking 
docker run --name skywalking -d -p 1234:1234 -p 11800:11800 -p 12800:12800 -v /etc/timezone:/etc/timezone -v /etc/localtime:/etc/localtime --restart always --link elasticsearch:elasticsearch -e SW_STORAGE=elasticsearch -e SW_STORAGE_ES_CLUSTER_NODES=elasticsearch:9200 apache/skywalking-oap-server 


// skywalking ui
docker run --name skywalking-ui -d -p 8080:8080 --link skywalking:skywalking -e SW_OAP_ADDRESS=skywalking:12800 -v /etc/timezone:/etc/timezone -v /etc/localtime:/etc/localtime --restart always apache/skywalking-ui


//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------

首先下载源码编译 然后 写一个docker-compose.yml

晚上写一个文档

docker-compose 部署一定要是 host模式，要不adminservice的 homepage地址  是容器内的地址，这个坑了一晚上

// ConfigService

docker run -p 8080:8080 --net=host -e DS_URL="jdbc:mysql://172.16.100.6:3306/ApolloConfigDB?characterEncoding=utf8" -e DS_USERNAME=root -e DS_PASSWORD=abc123 -d -v /tmp/logs:/opt/logs --name apollo-configservice apollo-configservice


// adminService
docker run -p 8090:8090 --net=host -e DS_URL="jdbc:mysql://172.16.100.6:3306/ApolloConfigDB?characterEncoding=utf8" -e DS_USERNAME=root -e DS_PASSWORD=abc123 -d -v /tmp/logs:/opt/logs --name apollo-adminservice apollo-adminservice

// portal
docker run -p 8070:8070 --net=host -e DS_URL="jdbc:mysql://172.16.100.6:3306/ApolloPortalDB?characterEncoding=utf8" -e DS_USERNAME=root -e DS_PASSWORD=abc123 -e DEV_META=http://172.16.100.6:8080 -e PRO_META=http://172.16.100.6:8080 -d -v /tmp/logs:/opt/logs --name apollo-portal apollo-portal



// portainer
 portainer:
    image: portainer/portainer
    container_name: portainer
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer_data:/data
    network_mode: bridge # 网络模式
    restart: always



    
// telnet
systemctl status telnet.socket